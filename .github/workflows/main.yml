
name: Pipeline | DevSecOps - Heroku

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
    
jobs:
  dependency_check:
    runs-on: ubuntu-latest
    continue-on-error: true
    name: Dependency check Scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'    
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports  
   
  SonarScanner:
    name: Sonar Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_SERVER }} 
  
  Deploy_production:
    runs-on: ubuntu-latest
    environment: 
      name: 'Production'
      url: http://tp1-crud-master.herokuapp.com/
    needs: [SonarScanner,dependency_check]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "tp1-crud-master" #Must be unique in Heroku
          heroku_email: "gastonbarbaccia@hotmail.com"
  
  Acunetix_DAST:
    runs-on: ubuntu-latest
    needs: [Deploy_production]
    steps:
      - name: Trigger Acuneitx Scan
        run: |
             curl -k -i --request POST --url "${{ secrets.ACUNETIX_HOST }}" --header "X-Auth: ${{ secrets.ACUNETIX_KEY }}" --header "content-type: application/json" --data '{"profile_id":"11111111-1111-1111-1111-111111111111", "schedule":{"disable":false,"start_date":null,"time_sensitive":false}, "user_authorized_to_scan":"yes", "target_id":"${{ secrets.ACUNETIX_TARGET_ID }}"}'
